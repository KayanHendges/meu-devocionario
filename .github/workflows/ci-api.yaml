name: CI API

on:
  push:
    branches:
      - develop
    paths:
      - "apps/api/**"
      - "packages/project-types/**"
      - ".github/workflows/ci-api.yaml"
      - ".dockerignore"

  workflow_dispatch: {}

jobs:
  setup-aws:
    uses: ./.github/workflows/setup-aws.yaml
    secrets: inherit
    permissions:
        id-token: write
        contents: read

  build-and-push:
    needs: setup-aws
    runs-on: ubuntu-latest

    environment: prod
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Decode registry
        env:
          SECRET: ${{ secrets.SECRET_PASSPHRASE }}
        id: get-ecr-registry
        shell: bash
        run: |
          registry=$(gpg --decrypt --quiet --batch --passphrase "$SECRET" --output - <(echo "${{ needs.setup-aws.outputs.registry_encrypted }}" | base64 --decode))
          echo "::add-mask::$registry"
          echo "registry=$registry" >> "$GITHUB_OUTPUT"

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.get-ecr-registry.outputs.registry }}
          ECR_REPOSITORY: meu-devocionario
          ECR_USERNAME: ${{ needs.setup-aws.outputs.ecr_username }}
          ECR_PASSWORD: ${{ needs.setup-aws.outputs.ecr_password }}
          IMAGE_TAG: ${{github.sha}}
        run: |
          echo $ECR_PASSWORD | docker login -u $ECR_USERNAME --password-stdin $ECR_REGISTRY
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f apps/api/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
